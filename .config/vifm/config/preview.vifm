" vim: filetype=vifm :

":filev[iewer] pattern-list command1,command2,...
"register specified list of commands as viewers for each of the patterns.
"Viewer is a command which output is captured and displayed in one of the
"panes of vifm after pressing "e" or running :view command.
"When the command doesn't contain any of vifm macros, name of current file
"is appended as if command ended with %c macro. Comma escaping and missing
"commands processing rules as for :filetype apply to this command.
"See "Patterns" section below for pattern definition. Supports Lua handlers.

" Patterns
" 1. [!]{comma-separated-name-globs}
" 2. [!]{{comma-separated-path-globs}}
" 3. [!]/name-regular-expression/[iI]
" 4. [!]//path-regular-expression//[iI]
" 5. [!]<comma-separated-mime-type-globs>
" 6. undecorated-pattern


" pdf
fileviewer {*.pdf},<application/pdf>
        \ vifmimg pdf %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear


" audio
fileviewer {*.wav,*.mp3,*.aif},<audio/*>
        \ vifmimg audio %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear


" video
fileviewer {*.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,*.as[fx],*.bik,*.bik2,*.bk2},<video/*>
        \ vifmimg video %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear


" images
fileviewer {*.bmp,*.jpg,*.jpeg,*.gif,*.png,*.xpm},<image/*>
         \ vifmimg draw %px %py %pw %ph %c
         \ %pc
         \ vifmimg clear

" icons
fileviewer *.ico
        \ vifmimg magickpreview %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear


" man page
fileviewer {*.[1-8]},<text/troff>
        \ man ./%c | col -b


" torrent
fileviewer {*.torrent},<application/x-bittorrent>
        \ transmission-show %c


" archives

" zip
fileviewer {*.zip,*.jar,*.war,*.ear,*.oxt},<application/zip,application/java-archive>
        \ zip -sf %c

" tar
fileviewer {*.tgz,*.tar.gz}
        \ tar -tzf %c

fileviewer {*.tar.bz2,*.tbz2}
        \ tar -tjf %c

fileviewer {*.tar.txz,*.txz}
        \ xz --list %c

fileviewer {*.tar},<application/x-tar>
        \ tar -tf %c

" rar
fileviewer {*.rar},<application/x-rar>
        \ unrar vb %c

" 7zip
fileviewer {*.7z},<application/x-7z-compressed>
        \ 7z l %c


" documents

" doc
fileviewer {*.doc},<application/msword>
        \ catdoc %c

" docx
fileviewer {*.docx},<application/vnd.openxmlformats-officedocument.wordprocessingml.document>
        \ docx2txt %f -


" source engine demo
fileviewer {*.dem}
        \ demoinfo %f

" vpk
fileviewer {*.vpk}
        \ unvpk -h -l %f


" json
fileviewer {*.json},<application/json,text/json>
        \ jq -C . %c


" code highlighting
fileviewer {*.js,*.c,*.h,*.cpp,*.hpp,*.sh,*.bash,*.cs,*.rs,*.xml,*.py,*.tex,CMakeLists.txt,*.toml,*.yml,*.yaml,*.lua,*.css,*.html,*.md,*.nix,*.proto,*.diff,PKGBUILD}
        \ pygmentize -O style=monokai -f console256 -g


" everything else
fileviewer *[^/] output-or-file %c


